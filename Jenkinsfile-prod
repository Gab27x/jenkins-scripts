pipeline {
    agent any

    tools {
        maven 'Maven'
        jdk 'Java11'
    }

    environment {
        GIT_REPO = 'https://github.com/Gab27x/ecommerce-microservice-backend-app.git'
        BRANCH = 'master'
        DOCKER_REPO = 'gab27x/microservices'
    }



    stages {

        stage('CLONE') {
            steps {
                deleteDir()
                sh "git clone -b ${BRANCH} ${GIT_REPO} ."
            }
        }

        stage('Minikube Setup & Deployment') {
            steps {
                script {
                    echo "============================="
                    echo "Starting Minikube"
                    echo "============================="

                    sh "minikube start --cpus 4 --memory 8192"
                }
            }
        }

        stage('Minikube Deployment and e2e tests') {
            steps {
                script {
                    echo "============================="
                    echo "Deploying microservices via Helm"
                    echo "============================="

                    // Ajusta la ruta al chart y al archivo de valores
                    sh "helm upgrade --install microservices-prod ./microservices -f ./microservices/values-prod.yaml --namespace prod --create-namespace"

                    sh "sleep 40"

                    echo "Verifying deployment status..."
                    sh "kubectl get pods -n prod"
                }
            }
        }
    }

    post {
        always {
            echo '=== Limpiando entorno ==='
            sh 'kubectl get pods -n prod'
            sh "minikube delete"
            cleanWs()
            echo '=== Workspace limpiado ==='
        }

        success {
            echo 'Pipeline completado con éxito.'
        }

        failure {
            echo 'El pipeline falló. Revisa los logs para más detalles.'
        }
    }
}
